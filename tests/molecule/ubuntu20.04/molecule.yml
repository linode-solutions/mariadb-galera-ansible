---
dependency:
  name: galaxy
  requirements-file: ../../collections.yml
driver:
  name: docker
lint: |
  set -e
  yamllint .
  ansible-lint
  flake8
platforms:
  - name: galera1
    image: ubuntu20.04
    dockerfile: ./Dockerfile
    build_image: true
    docker_networks:
      - name: galera_network
        ipam_config:
          - subnet: "192.168.0.0/24"
            gateway: "192.168.0.254"
    networks:
      - name: galera_network
        ipv4_address: "192.168.0.1"
    etc_hosts:
      galera2: "192.168.0.2"
      galera3: "192.168.0.3"
    privileged: true
    command: init
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    groups:
      - galera_servers
  - name: galera2
    image: ubuntu20.04
    dockerfile: ./Dockerfile
    build_image: true
    docker_networks:
      - name: galera_network
        ipam_config:
          - subnet: "192.168.0.0/24"
            gateway: "192.168.0.254"
    networks:
      - name: galera_network
        ipv4_address: "192.168.0.2"
    etc_hosts:
      galera1: "192.168.0.1"
      galera3: "192.168.0.3"
    privileged: true
    command: init
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    groups:
      - galera_servers
  - name: galera3
    image: ubuntu20.04
    dockerfile: ./Dockerfile
    build_image: true
    docker_networks:
      - name: galera_network
        ipam_config:
          - subnet: "192.168.0.0/24"
            gateway: "192.168.0.254"
    networks:
      - name: galera_network
        ipv4_address: "192.168.0.3"
    etc_hosts:
      galera1: "192.168.0.1"
      galera2: "192.168.0.2"
    privileged: true
    command: init
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    groups:
      - galera_servers
provisioner:
  name: ansible
  lint:
    name: ansible-lint
  env:
    ANSIBLE_ROLES_PATH: ../../../roles
verifier:
  name: ansible
scenario:
  test_sequence:
    - dependency
    - lint
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - side_effect
    - verify
    - cleanup
    - destroy